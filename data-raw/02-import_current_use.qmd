---
title: "1 Import SWAM Current Use Scenario"
author: "CA Pellett"
format: html
execute: 
  echo: false
date: last-modified
---

```{r}
library(magrittr)

```

Current Use Scenario water demands are included in the raw data, or at least available by downloading the most recent version of SWAM. At this point, that data is not included in the package, but it would be nice to do so.

# Saluda Basin Model
```{r}
getwd()

cu_sld0 <- readxl::read_excel("Baseline Saluda Demands (for Alex P).xlsx", 
    skip = 2, n_max = 13) %>%
  dplyr::filter(dplyr::row_number() != 1) %>%
  dplyr::rename(Month = Name) %>%
  tidyr::pivot_longer(-Month, names_to = 'swamid', values_to = 'MGD')

cu_sld_ag <- readxl::read_excel("Baseline Saluda Demands (for Alex P).xlsx", 
    sheet = "Ag Objects", skip = 2, n_max = 13) %>%
  dplyr::filter(dplyr::row_number() != 1) %>%
  dplyr::rename(Month = Name) %>%
  tidyr::pivot_longer(-Month, names_to = 'swamid', values_to = 'MGD')

cu_sld <- dplyr::bind_rows(cu_sld0, cu_sld_ag) %>%
  dplyr::mutate(MGD = as.numeric(MGD),
                swam_model = 'Saluda')

```

# Savannah Basin Model
```{r}
cu_sav0 <- readxl::read_excel("Baseline Savannah Demands (for Alex).xlsx", 
    skip = 1, n_max = 15) %>%
  dplyr::filter(dplyr::row_number() > 3) %>%
  dplyr::rename(Month = Name) %>%
  tidyr::pivot_longer(-Month, names_to = 'swamid', values_to = 'MGD')

cu_sav_ag <- readxl::read_excel("Baseline Savannah Demands (for Alex).xlsx", 
    sheet = "ag users", n_max = 16) %>%
  dplyr::filter(dplyr::row_number() > 4) %>%
  dplyr::rename(Month = Name) %>%
  tidyr::pivot_longer(-Month, names_to = 'swamid', values_to = 'MGD')

cu_sav <- dplyr::bind_rows(cu_sav0, cu_sav_ag) %>%
  dplyr::mutate(MGD = as.numeric(MGD),
                swam_model = 'Savannah')
```


# Broad Basin Model


# Pee Dee Basin Model

# Salkehatchie Basin Model
```{r}
cu_slk0 <- readxl::read_excel(
  "SLK Baseline (Current Use) Demands.xlsx", skip = 3) |>
  head(19) |>
  tail(12) |>
  tidyr::pivot_longer(`IR: Breland`:`IR: Withycombe Farm`) |>
  dplyr::rename(Month=`Name:`, swamid=name, MGD=value) |>
  dplyr::mutate(MGD = readr::parse_number(MGD))
## some entries were in E notation, parse_number seems to work great.

dplyr::filter(cu_slk0,
              stringr::str_detect(stringr::str_sub(swamid, -1), '[:digit:]' ))
## there are several repeat entries, swamid's repeated with a number at the end.
## if i understand correctly, those are representative of swam outputs, where the demand would be divided.
## the swam inputs would be the sum of those columns.

## to fix, remove trailing numeric digit and then sum total for each swamid*month
cu_slk <- cu_slk0 |>
  dplyr::mutate(swamid = dplyr::if_else(
    stringr::str_detect(stringr::str_sub(swamid, -1), '[:digit:]' ),
    stringr::str_sub(swamid, 1, -2), swamid)) |>
  dplyr::group_by(swamid, Month) |>
  dplyr::summarise(MGD = sum(c(MGD, 0))) |>
  dplyr::ungroup() |>
  dplyr::mutate(swam_model = 'Salkehatchie')

```


```{r}
swam_current_use <- dplyr::bind_rows(cu_sld, cu_sav, cu_slk) %>%
  dplyr::mutate(Scenario = 'SWAM Current Use')

```


```{r}
usethis::use_data(swam_current_use, overwrite=T)

```